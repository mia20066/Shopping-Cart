{"ast":null,"code":"export var validateContactForm = function validateContactForm(values) {\n  var errors = {}; // errors object\n\n  if (!values.firstName) {\n    //if firstname is empty string\n    errors.firstName = 'Required';\n  } else if (values.firstName.length < 2) {\n    errors.firstName = 'Must be at least 2 characters.';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    //if firstname is empty string\n    errors.lastName = 'Required';\n  } else if (values.lastName.length < 2) {\n    errors.lastName = 'Must be at least 2 characters.';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = 'Must be 15 characters or less';\n  }\n\n  var reg = /^\\d+$/;\n\n  if (!reg.test(values.phoneNum)) {\n    errors.phoneNum = 'The phone number should contain only numbers';\n  }\n\n  if (!values.email.includes('@')) {\n    errors.email = 'Email should contain a @';\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/Users/dimaoussamaelsayed/Desktop/NucampFolder/3-React/React-Shopping-Cart-master/Shopping-Cart/src/components/validateContactForm.js"],"names":["validateContactForm","values","errors","firstName","length","lastName","reg","test","phoneNum","email","includes"],"mappings":"AAAA,OAAO,IAAMA,mBAAmB,GAAE,SAArBA,mBAAqB,CAACC,MAAD,EAAY;AAC1C,MAAMC,MAAM,GAAE,EAAd,CAD0C,CACxB;;AAClB,MAAI,CAACD,MAAM,CAACE,SAAZ,EAAuB;AAAC;AAC5BD,IAAAA,MAAM,CAACC,SAAP,GAAkB,UAAlB;AACK,GAFD,MAGK,IAAIF,MAAM,CAACE,SAAP,CAAiBC,MAAjB,GAA0B,CAA9B,EAAgC;AACjCF,IAAAA,MAAM,CAACC,SAAP,GAAkB,gCAAlB;AACH,GAFI,MAGA,IAAIF,MAAM,CAACE,SAAP,CAAiBC,MAAjB,GAA0B,EAA9B,EAAkC;AACnCF,IAAAA,MAAM,CAACC,SAAP,GAAkB,+BAAlB;AACH;;AAED,MAAI,CAACF,MAAM,CAACI,QAAZ,EAAsB;AAAC;AACnBH,IAAAA,MAAM,CAACG,QAAP,GAAiB,UAAjB;AACK,GAFT,MAGa,IAAIJ,MAAM,CAACI,QAAP,CAAgBD,MAAhB,GAAyB,CAA7B,EAA+B;AAChCF,IAAAA,MAAM,CAACG,QAAP,GAAiB,gCAAjB;AACH,GAFI,MAGA,IAAIJ,MAAM,CAACI,QAAP,CAAgBD,MAAhB,GAAyB,EAA7B,EAAiC;AAClCF,IAAAA,MAAM,CAACG,QAAP,GAAiB,+BAAjB;AACH;;AAED,MAAMC,GAAG,GAAG,OAAZ;;AACA,MAAG,CAACA,GAAG,CAACC,IAAJ,CAASN,MAAM,CAACO,QAAhB,CAAJ,EAA8B;AAC1BN,IAAAA,MAAM,CAACM,QAAP,GAAkB,8CAAlB;AACH;;AAED,MAAI,CAACP,MAAM,CAACQ,KAAP,CAAaC,QAAb,CAAsB,GAAtB,CAAL,EAAgC;AAC5BR,IAAAA,MAAM,CAACO,KAAP,GAAe,0BAAf;AACH;;AAED,SAAOP,MAAP;AACX,CAhCM","sourcesContent":["export const validateContactForm =(values) => {\n    const errors= {}; // errors object\n    if (!values.firstName) {//if firstname is empty string\nerrors.firstName ='Required'\n    }\n    else if (values.firstName.length < 2){\n        errors.firstName ='Must be at least 2 characters.';\n    }\n    else if (values.firstName.length > 15) {\n        errors.firstName ='Must be 15 characters or less';\n    }\n\n    if (!values.lastName) {//if firstname is empty string\n        errors.lastName ='Required'\n            }\n            else if (values.lastName.length < 2){\n                errors.lastName ='Must be at least 2 characters.';\n            }\n            else if (values.lastName.length > 15) {\n                errors.lastName ='Must be 15 characters or less';\n            } \n\n            const reg = /^\\d+$/;\n            if(!reg.test(values.phoneNum)){\n                errors.phoneNum = 'The phone number should contain only numbers';\n            }\n\n            if (!values.email.includes('@')){\n                errors.email = 'Email should contain a @';\n            }\n            \n            return errors;\n};"]},"metadata":{},"sourceType":"module"}